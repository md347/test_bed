function queryLDAP([string]$ldapFilter, [string]$path) {
    # Build LDAP filter to look for users with SPN values registered for the current domain
    $domain = New-Object System.DirectoryServices.DirectoryEntry
    $search = New-Object System.DirectoryServices.DirectorySearcher
    $search.SearchRoot = $domain
    $search.PageSize = 1000
    $search.Filter = $ldapFilter
    $search.SearchScope = "Subtree"


    # Open file for writing
    $outputFile = [System.IO.StreamWriter] $path

    # Execute Search
    $results = $search.FindAll()

    # Display values from the returned objects and save to file
    foreach ($result in $results) {
        $result_entry = $result.GetDirectoryEntry()

        # Retrieve distinguishedName and servicePrincipalName properties
        $distinguishedName = $result_entry.Properties['distinguishedName'][0]
        $servicePrincipalName = $result_entry.Properties['servicePrincipalName']

        # Write the values to file
        $outputFile.WriteLine("DistinguishedName: $distinguishedName")
        $outputFile.WriteLine("ServicePrincipalName: $servicePrincipalName")
        $outputFile.WriteLine()
    }

    # Close the output file
    $outputFile.Close()

    # Output the file path
    Write-Host "Results saved to: $path"
}